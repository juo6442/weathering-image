{"version":3,"sources":["Header.js","Footer.js","ImageDegrader.js","EditorSection.js","index.js"],"names":["Header","props","document","title","githubUrl","Footer","href","getImageFromData","data","Promise","resolve","image","Image","onload","src","processFirstPass","quality","width","height","canvas","createElement","ctx","getContext","fillStyle","fillRect","drawImage","toDataURL","processSecondPass","overlayAmount","colorBurnAmount","globalCompositeOperation","globalAlpha","imageData","degrade","a","resultWidth","resultHeight","result","firstPassScale","EditorSection","state","degradedImageData","loadSampleImage","this","setState","refreshResult","event","preventDefault","dataTransfer","items","kind","file","getAsFile","loadSelectedImage","target","value","getDegradedImage","then","sampleImage","handleImageLoad","URL","reader","FileReader","e","readAsDataURL","getElementById","click","className","onDragOver","handleDragOver","onDrop","handleDrop","type","id","accept","onChange","loadImage","files","onClick","showImageSelector","alt","min","max","step","handleQualityChange","React","Component","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.da37f8ee.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Header(props) {\n  return (\n    <header>\n      <h1>{document.title}</h1>\n      <p>디지털 풍화를 좋아하시는 여러분을 위한 페이지입니다. 저화질의 이미지를 쉽고 빠르게 만들어 보세요!</p>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst githubUrl = \"https://github.com/juo6442/weathering-image\";\n\nfunction Footer(props) {\n  return (\n    <footer>\n      <hr />\n      <p>GitHub: <a href={githubUrl}>{githubUrl}</a></p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","function getImageFromData(data) {\n  return new Promise((resolve) => {\n    const image = new Image();\n    image.onload = () => {\n      resolve(image);\n    };\n    image.src = data;\n  });\n}\n\nfunction processFirstPass(image, quality, width, height) {\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = width;\n  canvas.height = height;\n\n  const ctx = canvas.getContext(\"2d\");\n\n  ctx.fillStyle = \"white\";\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n\n  return canvas.toDataURL(\"image/jpeg\", quality);\n}\n\nfunction processSecondPass(image, overlayAmount, colorBurnAmount, quality, width, height) {\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = width;\n  canvas.height = height;\n\n  const ctx = canvas.getContext(\"2d\");\n  ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n\n  ctx.globalCompositeOperation = \"overlay\";\n  ctx.fillStyle = \"black\";\n  ctx.globalAlpha = overlayAmount;\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n  ctx.globalCompositeOperation = \"color-burn\";\n  ctx.fillStyle = \"rgb(230, 225, 170)\";\n  ctx.globalAlpha = colorBurnAmount;\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n  return canvas.toDataURL(\"image/jpeg\", quality);\n}\n\nasync function getDegradedImage(imageData, degrade) {\n  if (!imageData) return \"\";\n\n  const image = await getImageFromData(imageData);\n  const resultWidth = image.width;\n  const resultHeight = image.height;\n\n  const firstPassScale = (1 - degrade / 100) * 0.5 + 0.5;\n  let result = processFirstPass(\n    image,\n    (100 - degrade) / 100,\n    resultWidth * firstPassScale, resultHeight * firstPassScale);\n\n  result = processSecondPass(\n    await getImageFromData(result),\n    degrade / 100 * 0.1,\n    degrade / 100,\n    (100 - degrade) / 100,\n    resultWidth, resultHeight);\n\n  return result;\n}\n\nexport { getDegradedImage };\n","import React from \"react\";\nimport { getDegradedImage } from \"./ImageDegrader\";\nimport \"./style.css\";\n\nclass EditorSection extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      imageData: null,\n      degrade: 0,\n      degradedImageData: null,\n    };\n\n    this.loadSampleImage();\n  }\n\n  handleImageLoad(data) {\n    this.setState({\n      degrade: 0,\n      imageData: data,\n    }, this.refreshResult);\n  }\n\n  handleDragOver(event) {\n    event.preventDefault();\n  }\n\n  handleDrop(event) {\n    event.preventDefault();\n\n    if (event.dataTransfer.items[0].kind === \"file\") {\n      const file = event.dataTransfer.items[0].getAsFile();\n      this.loadSelectedImage(file);\n    }\n  }\n\n  handleQualityChange(event) {\n    this.setState({\n      degrade: event.target.value,\n    }, this.refreshResult);\n  }\n\n  refreshResult() {\n    getDegradedImage(this.state.imageData, this.state.degrade)\n      .then((result) => {\n        this.setState({\n          degradedImageData: result,\n        });\n      });\n  }\n\n  loadSampleImage() {\n    const sampleImage = new Image();\n    sampleImage.onload = () => {\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = 400;\n      canvas.height = 400;\n      const ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(sampleImage, 0, 0, canvas.width, canvas.height);\n\n      this.handleImageLoad(canvas.toDataURL(\"Image/jpeg\"));\n    }\n    sampleImage.src = document.URL + \"/sample.png\";\n  }\n\n  loadImage(file) {\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (e) => this.handleImageLoad(e.target.result);\n    reader.readAsDataURL(file);\n  }\n\n  showImageSelector() {\n    const selector = document.getElementById(\"imageSelector\");\n    selector.click();\n  }\n\n  render() {\n    return (\n      <section className=\"imageEditor\"\n        onDragOver={(event) => this.handleDragOver(event)}\n        onDrop={(event) => this.handleDrop(event)}\n      >\n        <div className=\"buttonContainer\">\n          <input type=\"file\" id=\"imageSelector\" accept=\"image/*\"\n            onChange={(event) => this.loadImage(event.target.files[0])}\n          />\n          <input type=\"button\" value=\"이미지 불러오기\"\n            onClick={() => this.showImageSelector()}\n          />\n        </div>\n\n        <img className=\"image\" alt=\"불러온 이미지\"\n          src={this.state.degradedImageData}\n        />\n\n        <input type=\"range\"\n          min=\"0\" max=\"100\" step=\"5\"\n          value={this.state.degrade}\n          onChange={(event) => this.handleQualityChange(event)}\n        />\n      </section>\n    );\n  }\n}\n\nexport default EditorSection;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport EditorSection from \"./EditorSection\";\nimport \"./style.css\";\n\nfunction App(props) {\n  return (\n    <>\n      <Header />\n      <EditorSection />\n      <Footer />\n    </>\n  );\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}