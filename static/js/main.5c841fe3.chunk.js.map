{"version":3,"sources":["Header.js","Footer.js","ImageDegrader.js","EditorSection.js","index.js"],"names":["Header","props","document","title","githubUrl","Footer","href","getImageFromData","data","Promise","resolve","image","Image","onload","src","imageData","size","a","canvas","createElement","imageSize","width","height","scale","Math","sqrt","parseInt","ctx","getContext","fillStyle","fillRect","drawImage","toDataURL","processFirstPass","quality","processSecondPass","overlayAmount","colorBurnAmount","globalCompositeOperation","globalAlpha","degrade","resultWidth","resultHeight","result","firstPassScale","EditorSection","state","degradedImageData","degradedImageDataCache","loadSampleImage","fitImageSize","then","Map","set","setState","showDegradedImage","event","preventDefault","dataTransfer","items","kind","file","getAsFile","this","loadImage","Number","target","value","cache","get","getDegradedImage","sampleImage","handleImageLoad","URL","reader","FileReader","e","readAsDataURL","getElementById","click","className","onDragOver","handleDragOver","onDrop","handleDrop","type","id","accept","onChange","files","onClick","showImageSelector","alt","min","max","step","handleQualityChange","React","Component","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.5c841fe3.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Header(props) {\n  return (\n    <header>\n      <h1>{document.title}</h1>\n      <p>디지털 풍화를 좋아하시는 여러분을 위한 페이지입니다. 저화질의 이미지를 쉽고 빠르게 만들어 보세요!</p>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst githubUrl = \"https://github.com/juo6442/weathering-image\";\n\nfunction Footer(props) {\n  return (\n    <footer>\n      <hr />\n      <p>GitHub: <a href={githubUrl}>{githubUrl}</a></p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","function getImageFromData(data) {\n  return new Promise((resolve) => {\n    const image = new Image();\n    image.onload = () => {\n      resolve(image);\n    };\n    image.src = data;\n  });\n}\n\nasync function fitImageSize(imageData, size) {\n  if (!imageData) return \"\";\n\n  const image = await getImageFromData(imageData);\n  const canvas = document.createElement(\"canvas\");\n\n  const imageSize = image.width * image.height;\n  const scale = (size < imageSize) ? Math.sqrt(size / imageSize) : 1;\n  canvas.width = parseInt(image.width * scale);\n  canvas.height = parseInt(image.height * scale);\n\n  const ctx = canvas.getContext(\"2d\");\n\n  ctx.fillStyle = \"white\";\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n\n  return canvas.toDataURL(\"image/jpeg\", 1);\n}\n\nfunction processFirstPass(image, quality, width, height) {\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = width;\n  canvas.height = height;\n\n  const ctx = canvas.getContext(\"2d\");\n\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n\n  return canvas.toDataURL(\"image/jpeg\", quality);\n}\n\nfunction processSecondPass(image, overlayAmount, colorBurnAmount, quality, width, height) {\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = width;\n  canvas.height = height;\n\n  const ctx = canvas.getContext(\"2d\");\n  ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n\n  ctx.globalCompositeOperation = \"overlay\";\n  ctx.fillStyle = \"black\";\n  ctx.globalAlpha = overlayAmount;\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n  ctx.globalCompositeOperation = \"color-burn\";\n  ctx.fillStyle = \"rgb(230, 225, 170)\";\n  ctx.globalAlpha = colorBurnAmount;\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n  return canvas.toDataURL(\"image/jpeg\", quality);\n}\n\nasync function getDegradedImage(imageData, degrade) {\n  if (!imageData) return \"\";\n\n  const image = await getImageFromData(imageData);\n  const resultWidth = image.width;\n  const resultHeight = image.height;\n\n  const firstPassScale = (1 - degrade / 100) * 0.5 + 0.5;\n  let result = processFirstPass(\n    image,\n    (100 - degrade) / 100,\n    resultWidth * firstPassScale, resultHeight * firstPassScale);\n\n  result = processSecondPass(\n    await getImageFromData(result),\n    degrade / 100 * 0.1,\n    degrade / 100,\n    (100 - degrade) / 100,\n    resultWidth, resultHeight);\n\n  return result;\n}\n\nexport { fitImageSize, getDegradedImage };\n","import React from \"react\";\nimport { fitImageSize, getDegradedImage } from \"./ImageDegrader\";\nimport \"./style.css\";\n\nconst maxImageSize = 1500 * 1500;\n\nclass EditorSection extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      imageData: null,\n      degrade: 0,\n      degradedImageData: null,\n      degradedImageDataCache: null,\n    };\n\n    this.loadSampleImage();\n  }\n\n  handleImageLoad(data) {\n    fitImageSize(data, maxImageSize)\n      .then((result) => {\n        const degradedImageDataCache = new Map();\n        degradedImageDataCache.set(0, result);\n\n        this.setState({\n          degrade: 0,\n          imageData: result,\n          degradedImageData: result,\n          degradedImageDataCache: degradedImageDataCache,\n        }, () => this.showDegradedImage(this.state.degrade));\n      });\n  }\n\n  handleDragOver(event) {\n    event.preventDefault();\n  }\n\n  handleDrop(event) {\n    event.preventDefault();\n\n    if (event.dataTransfer.items[0].kind === \"file\") {\n      const file = event.dataTransfer.items[0].getAsFile();\n      this.loadImage(file);\n    }\n  }\n\n  handleQualityChange(event) {\n    this.setState({\n      degrade: Number(event.target.value),\n    }, () => this.showDegradedImage(this.state.degrade));\n  }\n\n  showDegradedImage(degrade) {\n    const cache = this.state.degradedImageDataCache.get(degrade);\n    if (cache) {\n      this.setState({\n        degradedImageData: cache,\n      });\n      return;\n    }\n\n    getDegradedImage(this.state.imageData, degrade)\n      .then((result) => {\n        const degradedImageDataCache = new Map(this.state.degradedImageDataCache);\n        degradedImageDataCache.set(degrade, result);\n\n        this.setState({\n          degradedImageData: result,\n          degradedImageDataCache: degradedImageDataCache,\n        });\n      });\n  }\n\n  loadSampleImage() {\n    const sampleImage = new Image();\n    sampleImage.onload = () => {\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = 400;\n      canvas.height = 400;\n      const ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(sampleImage, 0, 0, canvas.width, canvas.height);\n\n      this.handleImageLoad(canvas.toDataURL(\"Image/jpeg\"), 1);\n    }\n    sampleImage.src = document.URL + \"/sample.png\";\n  }\n\n  loadImage(file) {\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (e) => this.handleImageLoad(e.target.result);\n    reader.readAsDataURL(file);\n  }\n\n  showImageSelector() {\n    const selector = document.getElementById(\"imageSelector\");\n    selector.click();\n  }\n\n  render() {\n    return (\n      <section className=\"imageEditor\"\n        onDragOver={(event) => this.handleDragOver(event)}\n        onDrop={(event) => this.handleDrop(event)}\n      >\n        <div className=\"buttonContainer\">\n          <input type=\"file\" id=\"imageSelector\" accept=\"image/*\"\n            onChange={(event) => this.loadImage(event.target.files[0])}\n          />\n          <input type=\"button\" value=\"이미지 불러오기\"\n            onClick={() => this.showImageSelector()}\n          />\n        </div>\n\n        <img className=\"image\" alt=\"불러온 이미지\"\n          src={this.state.degradedImageData}\n        />\n\n        <input type=\"range\"\n          min=\"0\" max=\"100\" step=\"5\"\n          value={this.state.degrade}\n          onChange={(event) => this.handleQualityChange(event)}\n        />\n      </section>\n    );\n  }\n}\n\nexport default EditorSection;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport EditorSection from \"./EditorSection\";\nimport \"./style.css\";\n\nfunction App(props) {\n  return (\n    <>\n      <Header />\n      <EditorSection />\n      <Footer />\n    </>\n  );\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}